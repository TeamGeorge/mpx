/* -- Name:			Date.c						*
 * -- Author:		Robert Brown				*
 * -- Created:		August 30, 2013				*
 * -- Last Edited: 	August 30, 2013				*/

#include "date.h"

//Not sure why this is returning an int....check this in commhand *****************************************//
int date(int argc, char **argv) {
	
	today_p = (date*) sys_alloc_mem((size_t) sizeof(date));

	if(argc == 1){ //unsure about this, and how args are being passed (check commhand I believe) **********//
		char buffer[75];
		int bufferSize;
		date *today_p;

		if(today_p == NULL){
			strcpy(buffer, "Memory Allocation Failed!\n");
			bufferSize = strlen(buffer);
			sys_req(WRITE, TERMINAL, buffer, &bufferSize);
		}
		
		else{
			sys_get_date(today);
			strcpy(buffer, "The current system date is: %d-%d-%d\n", today->month, today->day, today->year);
			bufferSize = strlen(buffer);
			sys_req(WRITE, TERMINAL, buffer, &bufferSize);
		}
	}
	else if(argc == 2){ //This may need to be changed as above *********************************************//
		int month=-1, day=-1, year=-1; //Do all of these need to be moved up to the top? *******************//
		int scanReturn;
		
		scanReturn = sscanf(argv[1], "%d-%d-%d", &month, &day, &year);
		if(scanReturn != 3){
			strcpy(buffer, "Error Scanning Date.  Type \"help\" for help.\n");
			bufferSize = strlen(buffer);
			sys_req(WRITE, TERMINAL, buffer, &bufferSize);
		}
		else{
			if(month > 0 && day > 0 && year > 0){
				if(month < 13){
					today->month = month;
					
					if(day < 32){
						switch(month){
							case 1:
							case 3:
							case 5:
							case 7:
							case 8:
							case 10:
							case 12:
								today->day = day;
							break;
						
							case 4: 
							case 6:
							case 9:
							case 11:
								if(day < 31)
									today->day = day;
								else{
									buffer[0]='\0';
									strcpy(buffer, "Current Month \"%d\" does not support day values greater than 30\n", month);
									bufferSize = strlen(buffer);
									sys_req(WRITE, TERMINAL, buffer, &bufferSize);
								}
							break;
						
							case 2:
								if(day < 29)
									today->day = day;
								else if(day == 29){
								//Function here to check for leap year
									if(isLeapYear(year)){
										today->day = day;
									}
									else{
										buffer[0]= '\0';
										strcpy(buffer, "Current Year is not a 'Leap Year', Day value must be less than 29\n");
										bufferSize = strlen(buffer);
										sys_req(WRITE, TERMINAL, buffer, &bufferSize);
									}
								}
								else{
									buffer[0] = '\0';
									strcpy(buffer, "Current Month \"%d\" does not support values greater than 29\n", month);
									bufferSize = strlen(buffer);
									sys_req(WRITE, TERMINAL, buffer, &bufferSize);
								}
							break;
							
							default:
							break;
						}
					}
					else{
						buffer[0]='\0';
						strcpy(buffer, "Month value must be between 1 and 12\n");
						buffernSize = strlen(buffer);
						sys_req(WRITE, TERMINAL, buffer, &bufferSize);
					}			
				}
			}		
		}
	}
	else{
		//Billy's Function here
		//??
		//invalidArgs("date"); //<---Or does this need to be an actual allocated character pointer?
	}
	sys_free_mem(today);
}

int isLeapYear(int year){
	returnVal = 0;
	if(((year%4 == 0) && (year%100 != 0) || (year%400 == 0)))
		returnVal = 1;
	return returnVal;
}	
